@function base-conversion($value)
	$unit: unit($value)

	@if $unit == 'px'
		@return $value / 16px * 1em
	@else if $unit == '%'
		@return $value / 100% * 1em
	@else if $unit == 'em'
		@return $value
	@else if $unit == 'pt'
		@return $value / 12pt * 1em
	@else
		@return $value


//* Media Query
// Media queries: set up a mixin for all your @media breakpoints and reuse
// http://mikefowler.me/thoughts/passing-content-to-mixins-in-sass/
@mixin media($media)
	@if $media == nth($desktop, 1) or $media == nth($desktop, 2)
		@media only screen and (min-width : 1025px)
			@content
	@if $media == nth($wide-screens, 1) or $media == nth($wide-screens, 2)
		@media only screen and (min-width : 1824px)
			@content

	@if $media == nth($mobile-value, 1) or $media == nth($mobile-value, 2)
		@media only screen and (min-width : 320px) and (max-width : 480px)
			@content
	@if $media == nth($retina, 1) or $media == nth($retina, 2)
		@media only screen and (-webkit-min-device-pixel-ratio : 1.5), only screen and (min-device-pixel-ratio : 1.5)
			@content
	@if $media == nth($mobile-portrait, 1) or $media == nth($mobile-portrait, 2)
		@media only screen and (max-width : 320px)
			@content
	@if $media == nth($mobile-landscape, 1) or $media == nth($mobile-landscape, 2)
		@media only screen and (max-width : 480px)
			@content

	@if $media == nth($tablet, 1) or $media == nth($tablet, 2)
		@media only screen and (min-width : 768px) and (max-width : 1024px)
			@content
	@if $media == nth($max-tablet, 1) or $media == nth($max-tablet, 2)
		@media only screen and (max-width : 1024px)
			@content
	@if $media == nth($tablet-portrait, 1) or $media == nth($tablet-portrait, 2)
		@media only screen and (min-width : 768px) and (max-width : 1024px) and (orientation : portrait)
			@content
	@if $media == nth($tablet-landscape, 1) or $media == nth($tablet-landscape, 2)
		@media only screen and (min-width : 768px) and (max-width : 1024px) and (orientation : landscape)
			@content


// css3 docs

// Syntax: none | [inset? && [ <offset-x> <offset-y> <blur-radius>? <spread-radius>? <color>? ] ]#
box-shadow: 10px 5px 5px black
box-shadow: inset 0 0 1em gold, 0 0 1em red


// Formal grammar: none | [<shadow>,]* <shadow>
// where <shadow> is: [ <color>? <offset-x> <offset-y> <blur-radius>? | <offset-x> <offset-y> <blur-radius>? <color>? ]
text-shadow: 1px 1px 2px black, 0 0 1em blue, 0 0 0.2em blue
text-shadow: rgba(0,0,0,0.1) -1px 0, rgba(0,0,0,0.1) 0 -1px,
             rgba(255,255,255,0.1) 1px 0, rgba(255,255,255,0.1) 0 1px,
             rgba(0,0,0,0.1) -1px -1px, rgba(255,255,255,0.1) 1px 1px


// syntax: content-box | padding-box | border-box
// content-box: default style as specified by the CSS standard. The width and height properties are measured including only the content, but not the border, margin, or padding.
// padding-box: width and height properties include the padding size, and do not include the border or margin.
// border-box: width and height properties include the padding and border, but not the margin. This is the box model used by Internet Explorer when the document is in Quirks mode.
box-sizing: content-box

// syntax: [ <length> | <percentage> ]{1,4} [ / [ <length> | <percentage> ]{1,4} ]?
border-radius: 1em 5em
border-top-left-radius:     1em 5em
border-top-right-radius:    1em 5em
border-bottom-right-radius: 1em 5em
border-bottom-left-radius:  1em 5em

// syntax: <number>
opacity: 0.5

// property, duration, timing-function, delay
transition: width 1s linear 2s
transition: width 2s, height 2s, transform 2s


// syntax: none | <transform-function>+
transform: none
transform: matrix(1.0, 2.0, 3.0, 4.0, 5.0, 6.0)
transform: translate(12px, 50%)
transform: translateX(2em)
transform: translateY(3in)
transform: scale(2, 0.5)
transform: scaleX(2)
transform: scaleY(0.5)
transform: rotate(0.5turn)
transform: skewX(30deg)
transform: skewY(1.07rad)
transform: matrix3d(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0)
transform: translate3d(12px, 50%, 3em)
transform: translateZ(2px)
transform: scale3d(2.5, 1.2, 0.3)
transform: scaleZ(0.3)
transform: rotate3d(1, 2.0, 3.0, 10deg)
transform: rotateX(10deg)
transform: rotateY(10deg)
transform: rotateZ(10deg)
transform: perspective(17px)
transform: translateX(10px) rotate(10deg) translateY(5px)

// syntax: none | text | all | element
user-select: none
user-select: text
user-select: all
user-select: element
